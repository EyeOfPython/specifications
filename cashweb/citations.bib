@misc{nakamoto2008bpp,
  author =       {Nakamoto, Satoshi},
  title =        {{Bitcoin}: A peer-to-peer electronic cash system},
  howpublished = {Web document},
  year =         {2008},
  url =          {https://bitcoin.org/bitcoin.pdf},
}

@misc{finney2004rpow,
  title =        {Reusable Proofs of Work},
  url =          {https://nakamotoinstitute.org/finney/rpow/index.html},
  howpublished = {Web document},
  author =       {Finney, Hal},
  year =         {2004}
}

// Usenet
@misc{rfc5536,
	series =	{Request for Comments},
	number =	5536,
	howpublished =	{RFC 5536},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC5536},
	url =		{https://rfc-editor.org/rfc/rfc5536.txt},
        author =	{Dan Kohn and Ken Murchison and Charles Lindsey},
	title =		{{Netnews Article Format}},
	pagetotal =	36,
	year =		2009,
	month =		nov,
	abstract =	{This document specifies the syntax of Netnews articles in the context of the Internet Message Format (RFC 5322) and Multipurpose Internet Mail Extensions (MIME) (RFC 2045). This document obsoletes RFC 1036, providing an updated specification to reflect current practice and incorporating incremental changes specified in other documents. {[}STANDARDS-TRACK{]}},
}

@misc{rfc5537,
	series =	{Request for Comments},
	number =	5537,
	howpublished =	{RFC 5537},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC5537},
	url =		{https://rfc-editor.org/rfc/rfc5537.txt},
        author =	{Charles Lindsey and Russ Allbery},
	title =		{{Netnews Architecture and Protocols}},
	pagetotal =	48,
	year =		2009,
	month =		nov,
	abstract =	{This document defines the architecture of Netnews systems and specifies the correct manipulation and interpretation of Netnews articles by software that originates, distributes, stores, and displays them. It also specifies the requirements that must be met by any protocol used to transport and serve Netnews articles. {[}STANDARDS-TRACK{]}},
}

// Email
@misc{rfc5322,
	series =	{Request for Comments},
	number =	5322,
	howpublished =	{RFC 5322},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC5322},
	url =		{https://rfc-editor.org/rfc/rfc5322.txt},
  author =	{Pete Resnick},
	title =		{{Internet Message Format}},
	pagetotal =	57,
	year =		2008,
	month =		oct,
	abstract =	{This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of "electronic mail" messages. This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, "Standard for the Format of ARPA Internet Text Messages", updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs. {[}STANDARDS-TRACK{]}},
}

@misc{rfc1939,
	series =	{Request for Comments},
	number =	1939,
	howpublished =	{RFC 1939},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC1939},
	url =		{https://rfc-editor.org/rfc/rfc1939.txt},
  author =	{Dr. Marshall T. Rose and John G. Myers},
	title =		{{Post Office Protocol - Version 3}},
	pagetotal =	23,
	year =		1996,
	month =		may,
	abstract =	{The Post Office Protocol - Version 3 (POP3) is intended to permit a workstation to dynamically access a maildrop on a server host in a useful fashion. {[}STANDARDS-TRACK{]}},
}

@misc{rfc5321,
	series =	{Request for Comments},
	number =	5321,
	howpublished =	{RFC 5321},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC5321},
	url =		{https://rfc-editor.org/rfc/rfc5321.txt},
        author =	{Dr. John C. Klensin},
	title =		{{Simple Mail Transfer Protocol}},
	pagetotal =	95,
	year =		2008,
	month =		oct,
	abstract =	{This document is a specification of the basic protocol for Internet electronic mail transport. It consolidates, updates, and clarifies several previous documents, making all or parts of most of them obsolete. It covers the SMTP extension mechanisms and best practices for the contemporary Internet, but does not provide details about particular extensions. Although SMTP was designed as a mail transport and delivery protocol, this specification also contains information that is important to its use as a "mail submission" protocol for "split-UA" (User Agent) mail reading systems and mobile environments. {[}STANDARDS-TRACK{]}},
}

@misc{rfc4551,
	series =	{Request for Comments},
	number =	4551,
	howpublished =	{RFC 4551},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC4551},
	url =		{https://rfc-editor.org/rfc/rfc4551.txt},
        author =	{Steve Hole and Alexey Melnikov},
	title =		{{IMAP Extension for Conditional STORE Operation or Quick Flag Changes Resynchronization}},
	pagetotal =	25,
	year =		2006,
	month =		jun,
	abstract =	{Often, multiple IMAP (RFC 3501) clients need to coordinate changes to a common IMAP mailbox. Examples include different clients working on behalf of the same user, and multiple users accessing shared mailboxes. These clients need a mechanism to synchronize state changes for messages within the mailbox. They must be able to guarantee that only one client can change message state (e.g., message flags) at any time. An example of such an application is use of an IMAP mailbox as a message queue with multiple dequeueing clients. The Conditional Store facility provides a protected update mechanism for message state information that can detect and resolve conflicts between multiple writing mail clients. The Conditional Store facility also allows a client to quickly resynchronize mailbox flag changes. This document defines an extension to IMAP (RFC 3501). {[}STANDARDS-TRACK{]}},
}

// XMPP
@misc{rfc3920,
	series =	{Request for Comments},
	number =	3920,
	howpublished =	{RFC 3920},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC3920},
	url =		{https://rfc-editor.org/rfc/rfc3920.txt},
  author =	{Peter Saint-Andre},
	title =		{{Extensible Messaging and Presence Protocol (XMPP): Core}},
	pagetotal =	30,
	year =		2004,
	month =		oct,
	abstract =	{This memo defines the core features of the Extensible Messaging and Presence Protocol (XMPP), a protocol for streaming Extensible Markup Language (XML) elements in order to exchange structured information in close to real time between any two network endpoints. While XMPP provides a generalized, extensible framework for exchanging XML data, it is used mainly for the purpose of building instant messaging and presence applications that meet the requirements of RFC 2779. {[}STANDARDS-TRACK{]}},
}

@misc{rfc3921,
	series =	{Request for Comments},
	number =	3921,
	howpublished =	{RFC 3921},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC3921},
	url =		{https://rfc-editor.org/rfc/rfc3921.txt},
  author =	{Peter Saint-Andre},
	title =		{{Extensible Messaging and Presence Protocol (XMPP): Instant Messaging and Presence}},
	pagetotal =	107,
	year =		2004,
	month =		oct,
	abstract =	{This memo describes extensions to and applications of the core features of the Extensible Messaging and Presence Protocol (XMPP) that provide the basic instant messaging (IM) and presence functionality defined in RFC 2779. {[}STANDARDS-TRACK{]}},
}

@misc{rfc3922,
	series =	{Request for Comments},
	number =	3922,
	howpublished =	{RFC 3922},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC3922},
	url =		{https://rfc-editor.org/rfc/rfc3922.txt},
        author =	{Peter Saint-Andre},
	title =		{{Mapping the Extensible Messaging and Presence Protocol (XMPP) to Common Presence and Instant Messaging (CPIM)}},
	pagetotal =	34,
	year =		2004,
	month =		oct,
	abstract =	{This memo describes a mapping between the Extensible Messaging and Presence Protocol (XMPP) and the Common Presence and Instant Messaging (CPIM) specifications. {[}STANDARDS-TRACK{]}},
}

@misc{rfc3923,
	series =	{Request for Comments},
	number =	3923,
	howpublished =	{RFC 3923},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC3923},
	url =		{https://rfc-editor.org/rfc/rfc3923.txt},
        author =	{Peter Saint-Andre},
	title =		{{End-to-End Signing and Object Encryption for the Extensible Messaging and Presence Protocol (XMPP)}},
	pagetotal =	27,
	year =		2004,
	month =		oct,
	abstract =	{This memo defines methods of end-to-end signing and object encryption for the Extensible Messaging and Presence Protocol (XMPP). {[}STANDARDS-TRACK{]}},
}

@misc{facebook2017,
	author =	{Gmail},
	authorid =	{gmail},
	year = 		{2017},
	month = 	{June},
	day = 		{27},
	url = 		{https://www.facebook.com/zuck/posts/10103831654565331}
}

@misc{cloudflare2018,
  title =        {African traffic growth and predictions for the future},
  url =          {https://blog.cloudflare.com/african-traffic-growth-and-predictions-for-the-future/},
  howpublished = {Web document},
  author =       {Cloudflare},
  year =         {2018}
}

@misc{gmail2018,
	author =	{Gmail},
	authorid =	{gmail},
	year = 		{2018},
	month = 	{October},
	day = 		{26},
	tweetid =	{1055806807174725633},
	url = 		{https://twitter.com/gmail/status/1055806807174725633}
}

@misc{emailshare2020,
  title =        {Email Client Market Share},
  url =          {https://nakamotoinstitute.org/finney/rpow/index.html},
  howpublished = {Web document},
  author =       {Litmus Labs},
  year =         {2020}
}
